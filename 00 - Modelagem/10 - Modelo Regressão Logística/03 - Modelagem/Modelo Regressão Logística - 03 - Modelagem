{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMCE0vrkNVu3OKEi1eLgO/i"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Criação das variáveis Dummys"],"metadata":{"id":"M578ZUj5TX0B"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zFwsY_-aWqHI","executionInfo":{"status":"ok","timestamp":1702950263233,"user_tz":180,"elapsed":3375,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"8e9e03db-aad5-4106-9331-7cf1aee14e35"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["!pip install boto3==1.17.105\n","!pip install botocore --upgrade\n","!pip install s3fs\n","!pip install pyarrow"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7u6shhhAWrK9","executionInfo":{"status":"ok","timestamp":1702951125805,"user_tz":180,"elapsed":38415,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"4ab70872-67ee-4042-bf1d-ff5374006287"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: boto3==1.17.105 in /usr/local/lib/python3.10/dist-packages (1.17.105)\n","Collecting botocore<1.21.0,>=1.20.105 (from boto3==1.17.105)\n","  Using cached botocore-1.20.112-py2.py3-none-any.whl (7.7 MB)\n","Requirement already satisfied: jmespath<1.0.0,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from boto3==1.17.105) (0.10.0)\n","Requirement already satisfied: s3transfer<0.5.0,>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from boto3==1.17.105) (0.4.2)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.10/dist-packages (from botocore<1.21.0,>=1.20.105->boto3==1.17.105) (2.8.2)\n","Requirement already satisfied: urllib3<1.27,>=1.25.4 in /usr/local/lib/python3.10/dist-packages (from botocore<1.21.0,>=1.20.105->boto3==1.17.105) (1.26.18)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.21.0,>=1.20.105->boto3==1.17.105) (1.16.0)\n","Installing collected packages: botocore\n","  Attempting uninstall: botocore\n","    Found existing installation: botocore 1.33.13\n","    Uninstalling botocore-1.33.13:\n","      Successfully uninstalled botocore-1.33.13\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","aiobotocore 2.9.0 requires botocore<1.33.14,>=1.33.2, but you have botocore 1.20.112 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed botocore-1.20.112\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["botocore"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: botocore in /usr/local/lib/python3.10/dist-packages (1.20.112)\n","Collecting botocore\n","  Using cached botocore-1.34.3-py3-none-any.whl (11.8 MB)\n","Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from botocore) (0.10.0)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.10/dist-packages (from botocore) (2.8.2)\n","Requirement already satisfied: urllib3<2.1,>=1.25.4 in /usr/local/lib/python3.10/dist-packages (from botocore) (1.26.18)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore) (1.16.0)\n","Installing collected packages: botocore\n","  Attempting uninstall: botocore\n","    Found existing installation: botocore 1.20.112\n","    Uninstalling botocore-1.20.112:\n","      Successfully uninstalled botocore-1.20.112\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","aiobotocore 2.9.0 requires botocore<1.33.14,>=1.33.2, but you have botocore 1.34.3 which is incompatible.\n","boto3 1.17.105 requires botocore<1.21.0,>=1.20.105, but you have botocore 1.34.3 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed botocore-1.34.3\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["botocore"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: s3fs in /usr/local/lib/python3.10/dist-packages (2023.12.2)\n","Requirement already satisfied: aiobotocore<3.0.0,>=2.5.4 in /usr/local/lib/python3.10/dist-packages (from s3fs) (2.9.0)\n","Requirement already satisfied: fsspec==2023.12.2 in /usr/local/lib/python3.10/dist-packages (from s3fs) (2023.12.2)\n","Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.10/dist-packages (from s3fs) (3.9.1)\n","Collecting botocore<1.33.14,>=1.33.2 (from aiobotocore<3.0.0,>=2.5.4->s3fs)\n","  Using cached botocore-1.33.13-py3-none-any.whl (11.8 MB)\n","Requirement already satisfied: wrapt<2.0.0,>=1.10.10 in /usr/local/lib/python3.10/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs) (1.14.1)\n","Requirement already satisfied: aioitertools<1.0.0,>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from aiobotocore<3.0.0,>=2.5.4->s3fs) (0.11.0)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (23.1.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (6.0.4)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (1.9.4)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (1.4.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (1.3.1)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (4.0.3)\n","Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from botocore<1.33.14,>=1.33.2->aiobotocore<3.0.0,>=2.5.4->s3fs) (0.10.0)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.10/dist-packages (from botocore<1.33.14,>=1.33.2->aiobotocore<3.0.0,>=2.5.4->s3fs) (2.8.2)\n","Requirement already satisfied: urllib3<2.1,>=1.25.4 in /usr/local/lib/python3.10/dist-packages (from botocore<1.33.14,>=1.33.2->aiobotocore<3.0.0,>=2.5.4->s3fs) (1.26.18)\n","Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.10/dist-packages (from yarl<2.0,>=1.0->aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (3.6)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.33.14,>=1.33.2->aiobotocore<3.0.0,>=2.5.4->s3fs) (1.16.0)\n","Installing collected packages: botocore\n","  Attempting uninstall: botocore\n","    Found existing installation: botocore 1.34.3\n","    Uninstalling botocore-1.34.3:\n","      Successfully uninstalled botocore-1.34.3\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","boto3 1.17.105 requires botocore<1.21.0,>=1.20.105, but you have botocore 1.33.13 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed botocore-1.33.13\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["botocore"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pyarrow in /usr/local/lib/python3.10/dist-packages (10.0.1)\n","Requirement already satisfied: numpy>=1.16.6 in /usr/local/lib/python3.10/dist-packages (from pyarrow) (1.23.5)\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from io import BytesIO\n","import boto3"],"metadata":{"id":"cIudgKniWulM","executionInfo":{"status":"ok","timestamp":1702951125811,"user_tz":180,"elapsed":18,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["# Supondo que df seja o seu DataFrame\n","# Configuração para exibir todas as colunas\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.max_colwidth', None)\n","\n","# Configuração para exibir todas as linhas e colunas\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)"],"metadata":{"id":"oavM7XJhWzV5","executionInfo":{"status":"ok","timestamp":1702951797867,"user_tz":180,"elapsed":410,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":75,"outputs":[]},{"cell_type":"code","source":["s3 = boto3.resource(\n","    service_name='s3',\n","    region_name='us-east-1',\n","    aws_access_key_id='AKIAYTYOYG7SCH7IJSEG',\n","    aws_secret_access_key='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'\n",")"],"metadata":{"id":"CGofwzGoWtFO","executionInfo":{"status":"ok","timestamp":1702951798283,"user_tz":180,"elapsed":3,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["## Especificar o caminho do objeto do ABT de variáveis preditivas no S3\n","# Nomedo bucket\n","bucket_name_abt_train = 'pod-academy-analise-de-credito-para-fintech'\n","# Nome da pasta até o arquivo\n","object_key_train_categ_vars = 'modelos/modelo_reg_log_v1/abt_categ_vars_treino.csv'\n","\n","# ID\n","ID_abt_train = 'SK_ID_CURR'"],"metadata":{"id":"HECd2UaXVSqF","executionInfo":{"status":"ok","timestamp":1702951798689,"user_tz":180,"elapsed":2,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["## Especificar o caminho do objeto do ABT de variáveis preditivas no S3\n","# Nomedo bucket\n","bucket_name_abt_test = 'pod-academy-analise-de-credito-para-fintech'\n","# Nome da pasta até o arquivo\n","object_key_test_categ_vars = 'modelos/modelo_reg_log_v1/abt_categ_vars_oot.csv'\n","\n","# ID\n","ID_abt_test = 'SK_ID_CURR'"],"metadata":{"id":"K2DqdElaVUZC","executionInfo":{"status":"ok","timestamp":1702951799828,"user_tz":180,"elapsed":4,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","execution_count":79,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DjCWvYJZTKf0","executionInfo":{"status":"ok","timestamp":1702951801669,"user_tz":180,"elapsed":607,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"09dafab4-b94b-4ca4-acd2-f1b0f915516b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(150679, 17)"]},"metadata":{},"execution_count":79}],"source":["# Load csv file directly into python\n","obj = s3.Bucket(bucket_name_abt_train).Object(object_key_train_categ_vars).get()\n","abt_train_00 = pd.read_csv(obj['Body'])\n","abt_train_00.drop(axis=1,columns=['Unnamed: 0'],inplace=True)\n","abt_train_00.shape"]},{"cell_type":"code","source":["# Load csv file directly into python\n","obj = s3.Bucket(bucket_name_abt_test).Object(object_key_test_categ_vars).get()\n","abt_oot_00 = pd.read_csv(obj['Body'])\n","abt_oot_00.drop(axis=1,columns=['Unnamed: 0'],inplace=True)\n","abt_oot_00.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6v4YGUrNVITm","executionInfo":{"status":"ok","timestamp":1702951801669,"user_tz":180,"elapsed":7,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"32204d92-d11d-43c4-9f37-03d84d48291f"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(64578, 17)"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["abt_train_00.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"kscNjtb_TdVa","executionInfo":{"status":"ok","timestamp":1702951802205,"user_tz":180,"elapsed":13,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"e5b80bdf-30f3-4670-d252-c04a85802111"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   REGION_RATING_CLIENT_W_CITY  REG_CITY_NOT_WORK_CITY  FLAG_DOCUMENT_3  \\\n","0                            2                       0                1   \n","1                            1                       0                1   \n","2                            2                       0                1   \n","3                            2                       1                1   \n","4                            3                       0                1   \n","\n","   NAME_CONTRACT_TYPE_Revolving loans  CODE_GENDER_M  FLAG_OWN_CAR_Y  \\\n","0                                 0.0            0.0             0.0   \n","1                                 0.0            0.0             0.0   \n","2                                 0.0            0.0             0.0   \n","3                                 0.0            0.0             0.0   \n","4                                 0.0            0.0             0.0   \n","\n","   NAME_INCOME_TYPE_Pensioner  NAME_INCOME_TYPE_Working  \\\n","0                         0.0                       0.0   \n","1                         0.0                       1.0   \n","2                         0.0                       1.0   \n","3                         0.0                       1.0   \n","4                         0.0                       0.0   \n","\n","   NAME_EDUCATION_TYPE_Higher education  NAME_FAMILY_STATUS_Married  TARGET  \\\n","0                                   0.0                         0.0       0   \n","1                                   1.0                         1.0       1   \n","2                                   1.0                         0.0       0   \n","3                                   1.0                         1.0       0   \n","4                                   0.0                         0.0       1   \n","\n","   TFT_EXT_SOURCE_2  TFT_EXT_SOURCE_1  TFT_EXT_SOURCE_3  TFT_OWN_CAR_AGE  \\\n","0                 2                 2                 1                1   \n","1                 3                 2                 0                1   \n","2                 2                 2                 2                1   \n","3                 2                 2                 1                1   \n","4                 2                 1                 2                1   \n","\n","   TFT_DEF_30_CNT_SOCIAL_CIRCLE  TFT_AMT_REQ_CREDIT_BUREAU_DAY  \n","0                             0                              1  \n","1                             0                              1  \n","2                             0                              1  \n","3                             0                              2  \n","4                             0                              1  "],"text/html":["\n","  <div id=\"df-5757fb5c-ad5e-411c-82ad-6dd6380fbc66\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>REGION_RATING_CLIENT_W_CITY</th>\n","      <th>REG_CITY_NOT_WORK_CITY</th>\n","      <th>FLAG_DOCUMENT_3</th>\n","      <th>NAME_CONTRACT_TYPE_Revolving loans</th>\n","      <th>CODE_GENDER_M</th>\n","      <th>FLAG_OWN_CAR_Y</th>\n","      <th>NAME_INCOME_TYPE_Pensioner</th>\n","      <th>NAME_INCOME_TYPE_Working</th>\n","      <th>NAME_EDUCATION_TYPE_Higher education</th>\n","      <th>NAME_FAMILY_STATUS_Married</th>\n","      <th>TARGET</th>\n","      <th>TFT_EXT_SOURCE_2</th>\n","      <th>TFT_EXT_SOURCE_1</th>\n","      <th>TFT_EXT_SOURCE_3</th>\n","      <th>TFT_OWN_CAR_AGE</th>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5757fb5c-ad5e-411c-82ad-6dd6380fbc66')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5757fb5c-ad5e-411c-82ad-6dd6380fbc66 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5757fb5c-ad5e-411c-82ad-6dd6380fbc66');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aa71e219-4ea9-4302-a8e1-49d8e2078c43\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aa71e219-4ea9-4302-a8e1-49d8e2078c43')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aa71e219-4ea9-4302-a8e1-49d8e2078c43 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["!pip install --upgrade scikit-learn pandas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xGNnZzcETe5G","executionInfo":{"status":"ok","timestamp":1702951810466,"user_tz":180,"elapsed":7481,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"e7746896-33b2-4a9d-a40b-c1f4b97ac731"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (1.3.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.1.4)\n","Requirement already satisfied: numpy<2.0,>=1.17.3 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.23.5)\n","Requirement already satisfied: scipy>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.11.4)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.2.0)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.3.post1)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.3)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n"]}]},{"cell_type":"code","source":["import pickle\n","from sklearn.preprocessing import OneHotEncoder\n","\n","X = abt_train_00.drop(axis=1,columns=['TARGET'])\n","\n","lista_onehot = list(X.columns)\n","print('Lista de vars para OneHot Encoding: ',lista_onehot)\n","\n","# Instanciando o encoder\n","encoder = OneHotEncoder(drop='first', sparse_output=False, handle_unknown='ignore')\n","\n","# Aplicando o one-hot encoding\n","encoded_data = encoder.fit_transform(abt_train_00[lista_onehot])\n","encoded_cols = encoder.get_feature_names_out(lista_onehot)\n","encoded_df = pd.DataFrame(encoded_data, columns=encoded_cols, index=abt_train_00.index)\n","\n","df_train_03 = pd.concat([abt_train_00.drop(lista_onehot, axis=1), encoded_df], axis=1)\n","\n","# Salva o encoder e a lista de colunas em um arquivo .pkl\n","data_to_serialize = {\n","    'encoder': encoder,\n","    'columns': lista_onehot\n","}\n","\n","with open('/content/drive/MyDrive/2. Study  Work/Pod Academy/Hackathon - Ciência de Dados/Códigos e artefatos/00 - Modelagem/10 - Modelo Regressão Logística/03 - Modelagem/prd_onehotenc.pkl', 'wb') as f:\n","    pickle.dump(data_to_serialize, f)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CxXYNfleThEd","executionInfo":{"status":"ok","timestamp":1702951812128,"user_tz":180,"elapsed":1682,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"714a2213-f19d-4804-df55-aa6f1b6bb09c"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stdout","text":["Lista de vars para OneHot Encoding:  ['REGION_RATING_CLIENT_W_CITY', 'REG_CITY_NOT_WORK_CITY', 'FLAG_DOCUMENT_3', 'NAME_CONTRACT_TYPE_Revolving loans', 'CODE_GENDER_M', 'FLAG_OWN_CAR_Y', 'NAME_INCOME_TYPE_Pensioner', 'NAME_INCOME_TYPE_Working', 'NAME_EDUCATION_TYPE_Higher education', 'NAME_FAMILY_STATUS_Married', 'TFT_EXT_SOURCE_2', 'TFT_EXT_SOURCE_1', 'TFT_EXT_SOURCE_3', 'TFT_OWN_CAR_AGE', 'TFT_DEF_30_CNT_SOCIAL_CIRCLE', 'TFT_AMT_REQ_CREDIT_BUREAU_DAY']\n"]}]},{"cell_type":"code","source":["# Carregar o encoder e a lista de colunas\n","with open('/content/drive/MyDrive/2. Study  Work/Pod Academy/Hackathon - Ciência de Dados/Códigos e artefatos/00 - Modelagem/10 - Modelo Regressão Logística/03 - Modelagem/prd_onehotenc.pkl', 'rb') as f:\n","    loaded_data = pickle.load(f)\n","\n","loaded_encoder = loaded_data['encoder']\n","loaded_columns = loaded_data['columns']\n","\n","# Suponha test_df como sua base de teste\n","encoded_data_test = loaded_encoder.transform(abt_oot_00[loaded_columns])\n","encoded_cols_test = loaded_encoder.get_feature_names_out(loaded_columns)\n","encoded_df_test = pd.DataFrame(encoded_data_test, columns=encoded_cols_test, index=abt_oot_00.index)\n","\n","abt_oot_00 = pd.concat([abt_oot_00.drop(loaded_columns, axis=1), encoded_df_test], axis=1)\n"],"metadata":{"id":"KOvTPeiBXJWK","executionInfo":{"status":"ok","timestamp":1702951812129,"user_tz":180,"elapsed":12,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["abt_oot_00.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"-E51ecu2XY9G","executionInfo":{"status":"ok","timestamp":1702951812662,"user_tz":180,"elapsed":27,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"0f1a35b5-a8d0-4bcd-f974-77e367738feb"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   TARGET  REGION_RATING_CLIENT_W_CITY_2  REGION_RATING_CLIENT_W_CITY_3  \\\n","0       0                            1.0                            0.0   \n","1       0                            1.0                            0.0   \n","2       1                            1.0                            0.0   \n","3       0                            1.0                            0.0   \n","4       0                            1.0                            0.0   \n","\n","   REG_CITY_NOT_WORK_CITY_1  FLAG_DOCUMENT_3_1  \\\n","0                       0.0                0.0   \n","1                       0.0                1.0   \n","2                       0.0                1.0   \n","3                       1.0                1.0   \n","4                       0.0                1.0   \n","\n","   NAME_CONTRACT_TYPE_Revolving loans_1.0  CODE_GENDER_M_1.0  \\\n","0                                     1.0                1.0   \n","1                                     0.0                0.0   \n","2                                     0.0                1.0   \n","3                                     0.0                0.0   \n","4                                     0.0                0.0   \n","\n","   FLAG_OWN_CAR_Y_1.0  NAME_INCOME_TYPE_Pensioner_1.0  \\\n","0                 0.0                             0.0   \n","1                 0.0                             0.0   \n","2                 0.0                             0.0   \n","3                 0.0                             0.0   \n","4                 0.0                             0.0   \n","\n","   NAME_INCOME_TYPE_Working_1.0  NAME_EDUCATION_TYPE_Higher education_1.0  \\\n","0                           0.0                                       0.0   \n","1                           0.0                                       0.0   \n","2                           1.0                                       0.0   \n","3                           1.0                                       0.0   \n","4                           0.0                                       1.0   \n","\n","   NAME_FAMILY_STATUS_Married_1.0  TFT_EXT_SOURCE_2_1  TFT_EXT_SOURCE_2_2  \\\n","0                             0.0                 0.0                 0.0   \n","1                             0.0                 0.0                 0.0   \n","2                             0.0                 0.0                 1.0   \n","3                             1.0                 0.0                 1.0   \n","4                             1.0                 0.0                 0.0   \n","\n","   TFT_EXT_SOURCE_2_3  TFT_EXT_SOURCE_2_4  TFT_EXT_SOURCE_1_1  \\\n","0                 1.0                 0.0                 1.0   \n","1                 1.0                 0.0                 0.0   \n","2                 0.0                 0.0                 0.0   \n","3                 0.0                 0.0                 0.0   \n","4                 1.0                 0.0                 0.0   \n","\n","   TFT_EXT_SOURCE_1_2  TFT_EXT_SOURCE_1_3  TFT_EXT_SOURCE_3_1  \\\n","0                 0.0                 0.0                 0.0   \n","1                 0.0                 1.0                 1.0   \n","2                 1.0                 0.0                 0.0   \n","3                 1.0                 0.0                 0.0   \n","4                 0.0                 1.0                 1.0   \n","\n","   TFT_EXT_SOURCE_3_2  TFT_OWN_CAR_AGE_1  TFT_DEF_30_CNT_SOCIAL_CIRCLE_1  \\\n","0                 1.0                1.0                             0.0   \n","1                 0.0                1.0                             0.0   \n","2                 0.0                1.0                             0.0   \n","3                 1.0                1.0                             0.0   \n","4                 0.0                1.0                             0.0   \n","\n","   TFT_DEF_30_CNT_SOCIAL_CIRCLE_2  TFT_AMT_REQ_CREDIT_BUREAU_DAY_2  \\\n","0                             0.0                              0.0   \n","1                             1.0                              0.0   \n","2                             0.0                              0.0   \n","3                             0.0                              0.0   \n","4                             0.0                              1.0   \n","\n","   TFT_AMT_REQ_CREDIT_BUREAU_DAY_3  TFT_AMT_REQ_CREDIT_BUREAU_DAY_4  \\\n","0                              0.0                              0.0   \n","1                              0.0                              0.0   \n","2                              0.0                              0.0   \n","3                              0.0                              0.0   \n","4                              0.0                              0.0   \n","\n","   TFT_AMT_REQ_CREDIT_BUREAU_DAY_5  TFT_AMT_REQ_CREDIT_BUREAU_DAY_6  \n","0                              0.0                              0.0  \n","1                              0.0                              0.0  \n","2                              0.0                              0.0  \n","3                              0.0                              0.0  \n","4                              0.0                              0.0  "],"text/html":["\n","  <div id=\"df-77cb008e-ac7c-4a26-86ed-0039b4665d41\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TARGET</th>\n","      <th>REGION_RATING_CLIENT_W_CITY_2</th>\n","      <th>REGION_RATING_CLIENT_W_CITY_3</th>\n","      <th>REG_CITY_NOT_WORK_CITY_1</th>\n","      <th>FLAG_DOCUMENT_3_1</th>\n","      <th>NAME_CONTRACT_TYPE_Revolving loans_1.0</th>\n","      <th>CODE_GENDER_M_1.0</th>\n","      <th>FLAG_OWN_CAR_Y_1.0</th>\n","      <th>NAME_INCOME_TYPE_Pensioner_1.0</th>\n","      <th>NAME_INCOME_TYPE_Working_1.0</th>\n","      <th>NAME_EDUCATION_TYPE_Higher education_1.0</th>\n","      <th>NAME_FAMILY_STATUS_Married_1.0</th>\n","      <th>TFT_EXT_SOURCE_2_1</th>\n","      <th>TFT_EXT_SOURCE_2_2</th>\n","      <th>TFT_EXT_SOURCE_2_3</th>\n","      <th>TFT_EXT_SOURCE_2_4</th>\n","      <th>TFT_EXT_SOURCE_1_1</th>\n","      <th>TFT_EXT_SOURCE_1_2</th>\n","      <th>TFT_EXT_SOURCE_1_3</th>\n","      <th>TFT_EXT_SOURCE_3_1</th>\n","      <th>TFT_EXT_SOURCE_3_2</th>\n","      <th>TFT_OWN_CAR_AGE_1</th>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_1</th>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_2</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_2</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_3</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_4</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_5</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77cb008e-ac7c-4a26-86ed-0039b4665d41')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-77cb008e-ac7c-4a26-86ed-0039b4665d41 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-77cb008e-ac7c-4a26-86ed-0039b4665d41');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b31128ef-b12c-40bc-9d06-6051923463d6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b31128ef-b12c-40bc-9d06-6051923463d6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b31128ef-b12c-40bc-9d06-6051923463d6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["df_train_03.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"_t_POHa-Yifs","executionInfo":{"status":"ok","timestamp":1702951812662,"user_tz":180,"elapsed":24,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"10535489-bace-42d6-fb4c-699e5b9116ff"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   TARGET  REGION_RATING_CLIENT_W_CITY_2  REGION_RATING_CLIENT_W_CITY_3  \\\n","0       0                            1.0                            0.0   \n","1       1                            0.0                            0.0   \n","2       0                            1.0                            0.0   \n","3       0                            1.0                            0.0   \n","4       1                            0.0                            1.0   \n","\n","   REG_CITY_NOT_WORK_CITY_1  FLAG_DOCUMENT_3_1  \\\n","0                       0.0                1.0   \n","1                       0.0                1.0   \n","2                       0.0                1.0   \n","3                       1.0                1.0   \n","4                       0.0                1.0   \n","\n","   NAME_CONTRACT_TYPE_Revolving loans_1.0  CODE_GENDER_M_1.0  \\\n","0                                     0.0                0.0   \n","1                                     0.0                0.0   \n","2                                     0.0                0.0   \n","3                                     0.0                0.0   \n","4                                     0.0                0.0   \n","\n","   FLAG_OWN_CAR_Y_1.0  NAME_INCOME_TYPE_Pensioner_1.0  \\\n","0                 0.0                             0.0   \n","1                 0.0                             0.0   \n","2                 0.0                             0.0   \n","3                 0.0                             0.0   \n","4                 0.0                             0.0   \n","\n","   NAME_INCOME_TYPE_Working_1.0  NAME_EDUCATION_TYPE_Higher education_1.0  \\\n","0                           0.0                                       0.0   \n","1                           1.0                                       1.0   \n","2                           1.0                                       1.0   \n","3                           1.0                                       1.0   \n","4                           0.0                                       0.0   \n","\n","   NAME_FAMILY_STATUS_Married_1.0  TFT_EXT_SOURCE_2_1  TFT_EXT_SOURCE_2_2  \\\n","0                             0.0                 0.0                 1.0   \n","1                             1.0                 0.0                 0.0   \n","2                             0.0                 0.0                 1.0   \n","3                             1.0                 0.0                 1.0   \n","4                             0.0                 0.0                 1.0   \n","\n","   TFT_EXT_SOURCE_2_3  TFT_EXT_SOURCE_2_4  TFT_EXT_SOURCE_1_1  \\\n","0                 0.0                 0.0                 0.0   \n","1                 1.0                 0.0                 0.0   \n","2                 0.0                 0.0                 0.0   \n","3                 0.0                 0.0                 0.0   \n","4                 0.0                 0.0                 1.0   \n","\n","   TFT_EXT_SOURCE_1_2  TFT_EXT_SOURCE_1_3  TFT_EXT_SOURCE_3_1  \\\n","0                 1.0                 0.0                 1.0   \n","1                 1.0                 0.0                 0.0   \n","2                 1.0                 0.0                 0.0   \n","3                 1.0                 0.0                 1.0   \n","4                 0.0                 0.0                 0.0   \n","\n","   TFT_EXT_SOURCE_3_2  TFT_OWN_CAR_AGE_1  TFT_DEF_30_CNT_SOCIAL_CIRCLE_1  \\\n","0                 0.0                1.0                             0.0   \n","1                 0.0                1.0                             0.0   \n","2                 1.0                1.0                             0.0   \n","3                 0.0                1.0                             0.0   \n","4                 1.0                1.0                             0.0   \n","\n","   TFT_DEF_30_CNT_SOCIAL_CIRCLE_2  TFT_AMT_REQ_CREDIT_BUREAU_DAY_2  \\\n","0                             0.0                              0.0   \n","1                             0.0                              0.0   \n","2                             0.0                              0.0   \n","3                             0.0                              1.0   \n","4                             0.0                              0.0   \n","\n","   TFT_AMT_REQ_CREDIT_BUREAU_DAY_3  TFT_AMT_REQ_CREDIT_BUREAU_DAY_4  \\\n","0                              0.0                              0.0   \n","1                              0.0                              0.0   \n","2                              0.0                              0.0   \n","3                              0.0                              0.0   \n","4                              0.0                              0.0   \n","\n","   TFT_AMT_REQ_CREDIT_BUREAU_DAY_5  TFT_AMT_REQ_CREDIT_BUREAU_DAY_6  \n","0                              0.0                              0.0  \n","1                              0.0                              0.0  \n","2                              0.0                              0.0  \n","3                              0.0                              0.0  \n","4                              0.0                              0.0  "],"text/html":["\n","  <div id=\"df-0d5b48ee-0071-40c7-ba2b-0d5d69be882e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TARGET</th>\n","      <th>REGION_RATING_CLIENT_W_CITY_2</th>\n","      <th>REGION_RATING_CLIENT_W_CITY_3</th>\n","      <th>REG_CITY_NOT_WORK_CITY_1</th>\n","      <th>FLAG_DOCUMENT_3_1</th>\n","      <th>NAME_CONTRACT_TYPE_Revolving loans_1.0</th>\n","      <th>CODE_GENDER_M_1.0</th>\n","      <th>FLAG_OWN_CAR_Y_1.0</th>\n","      <th>NAME_INCOME_TYPE_Pensioner_1.0</th>\n","      <th>NAME_INCOME_TYPE_Working_1.0</th>\n","      <th>NAME_EDUCATION_TYPE_Higher education_1.0</th>\n","      <th>NAME_FAMILY_STATUS_Married_1.0</th>\n","      <th>TFT_EXT_SOURCE_2_1</th>\n","      <th>TFT_EXT_SOURCE_2_2</th>\n","      <th>TFT_EXT_SOURCE_2_3</th>\n","      <th>TFT_EXT_SOURCE_2_4</th>\n","      <th>TFT_EXT_SOURCE_1_1</th>\n","      <th>TFT_EXT_SOURCE_1_2</th>\n","      <th>TFT_EXT_SOURCE_1_3</th>\n","      <th>TFT_EXT_SOURCE_3_1</th>\n","      <th>TFT_EXT_SOURCE_3_2</th>\n","      <th>TFT_OWN_CAR_AGE_1</th>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_1</th>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_2</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_2</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_3</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_4</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_5</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d5b48ee-0071-40c7-ba2b-0d5d69be882e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0d5b48ee-0071-40c7-ba2b-0d5d69be882e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0d5b48ee-0071-40c7-ba2b-0d5d69be882e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ad5ff3b3-9a15-4e25-8aac-9baf02fe170b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad5ff3b3-9a15-4e25-8aac-9baf02fe170b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ad5ff3b3-9a15-4e25-8aac-9baf02fe170b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":86}]},{"cell_type":"markdown","source":["# Treinamento do Modelo (Regressão Logística)"],"metadata":{"id":"34T6OxYKYvMx"}},{"cell_type":"code","source":["X = df_train_03.drop(axis=1,columns=['TARGET'])\n","\n","lista_features_rl = list(X.columns)\n","lista_features_rl"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bNqMGzE2YssP","executionInfo":{"status":"ok","timestamp":1702951812663,"user_tz":180,"elapsed":22,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"ac5f35fa-4f27-4893-d2df-6163f801f3d4"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['REGION_RATING_CLIENT_W_CITY_2',\n"," 'REGION_RATING_CLIENT_W_CITY_3',\n"," 'REG_CITY_NOT_WORK_CITY_1',\n"," 'FLAG_DOCUMENT_3_1',\n"," 'NAME_CONTRACT_TYPE_Revolving loans_1.0',\n"," 'CODE_GENDER_M_1.0',\n"," 'FLAG_OWN_CAR_Y_1.0',\n"," 'NAME_INCOME_TYPE_Pensioner_1.0',\n"," 'NAME_INCOME_TYPE_Working_1.0',\n"," 'NAME_EDUCATION_TYPE_Higher education_1.0',\n"," 'NAME_FAMILY_STATUS_Married_1.0',\n"," 'TFT_EXT_SOURCE_2_1',\n"," 'TFT_EXT_SOURCE_2_2',\n"," 'TFT_EXT_SOURCE_2_3',\n"," 'TFT_EXT_SOURCE_2_4',\n"," 'TFT_EXT_SOURCE_1_1',\n"," 'TFT_EXT_SOURCE_1_2',\n"," 'TFT_EXT_SOURCE_1_3',\n"," 'TFT_EXT_SOURCE_3_1',\n"," 'TFT_EXT_SOURCE_3_2',\n"," 'TFT_OWN_CAR_AGE_1',\n"," 'TFT_DEF_30_CNT_SOCIAL_CIRCLE_1',\n"," 'TFT_DEF_30_CNT_SOCIAL_CIRCLE_2',\n"," 'TFT_AMT_REQ_CREDIT_BUREAU_DAY_2',\n"," 'TFT_AMT_REQ_CREDIT_BUREAU_DAY_3',\n"," 'TFT_AMT_REQ_CREDIT_BUREAU_DAY_4',\n"," 'TFT_AMT_REQ_CREDIT_BUREAU_DAY_5',\n"," 'TFT_AMT_REQ_CREDIT_BUREAU_DAY_6']"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["import pandas as pd\n","import statsmodels.api as sm"],"metadata":{"id":"2HcnoIumYxcN","executionInfo":{"status":"ok","timestamp":1702951812665,"user_tz":180,"elapsed":20,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["def logistic_regression_with_scorecard(data, target_var, features):\n","    # Adicionando uma constante ao dataset (intercepto)\n","    data = sm.add_constant(data)\n","\n","    # Ajustando o modelo de regressão logística\n","    model = sm.Logit(data[target_var], data[features + ['const']]).fit()\n","    # model = sm.Logit(data[target_var], data[features]).fit()\n","\n","    # Coletando p-valores e estatísticas de Wald\n","    summary = model.summary2().tables[1]\n","    summary['Wald'] = summary['z']**2\n","    scorecard = summary[['Coef.', 'P>|z|', 'Wald']]\n","    scorecard.columns = ['Beta Coefficient', 'P-Value', 'Wald Statistic']\n","    scorecard = scorecard.sort_values(by='Wald Statistic', ascending=False)\n","\n","    return model, scorecard\n","\n","model, scorecard = logistic_regression_with_scorecard(df_train_03, 'TARGET', lista_features_rl)\n","scorecard"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"BC8HOCUzYzad","executionInfo":{"status":"ok","timestamp":1702951820074,"user_tz":180,"elapsed":3301,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"99b825f7-58ed-4510-ef7e-82d75dd089a9"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["Optimization terminated successfully.\n","         Current function value: 0.252894\n","         Iterations 7\n"]},{"output_type":"execute_result","data":{"text/plain":["                                          Beta Coefficient        P-Value  \\\n","TFT_EXT_SOURCE_3_2                               -1.329123   0.000000e+00   \n","TFT_EXT_SOURCE_3_1                               -0.772777  2.159106e-195   \n","TFT_EXT_SOURCE_2_4                               -2.139296  4.975200e-105   \n","TFT_EXT_SOURCE_2_3                               -1.716768   1.179252e-71   \n","TFT_EXT_SOURCE_1_3                               -1.163510   1.443054e-60   \n","CODE_GENDER_M_1.0                                 0.336300   4.325165e-53   \n","TFT_EXT_SOURCE_2_2                               -1.237906   7.958004e-38   \n","NAME_EDUCATION_TYPE_Higher education_1.0         -0.293506   1.619530e-28   \n","TFT_EXT_SOURCE_1_2                               -0.655601   6.218061e-25   \n","TFT_DEF_30_CNT_SOCIAL_CIRCLE_2                    0.261837   6.582447e-21   \n","FLAG_OWN_CAR_Y_1.0                               -0.204390   1.028391e-12   \n","NAME_CONTRACT_TYPE_Revolving loans_1.0           -0.323090   1.235067e-12   \n","TFT_EXT_SOURCE_2_1                               -0.703169   1.701883e-12   \n","REGION_RATING_CLIENT_W_CITY_3                     0.315067   2.332672e-12   \n","NAME_INCOME_TYPE_Pensioner_1.0                   -0.234509   1.034547e-10   \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_2                   0.190907   2.745482e-10   \n","FLAG_DOCUMENT_3_1                                 0.170960   1.257852e-09   \n","NAME_INCOME_TYPE_Working_1.0                      0.136967   2.770870e-09   \n","TFT_EXT_SOURCE_1_1                               -0.407223   5.216993e-09   \n","NAME_FAMILY_STATUS_Married_1.0                   -0.107847   1.227605e-07   \n","TFT_OWN_CAR_AGE_1                                 0.166413   3.253423e-06   \n","REG_CITY_NOT_WORK_CITY_1                          0.102882   4.890462e-06   \n","REGION_RATING_CLIENT_W_CITY_2                     0.130020   1.012172e-03   \n","const                                             0.191714   1.339605e-01   \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_4                   0.538069   2.374145e-01   \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_3                   0.127411   3.710797e-01   \n","TFT_DEF_30_CNT_SOCIAL_CIRCLE_1                   -0.122435   6.122115e-01   \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_5                  -0.464807   6.555857e-01   \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_6                  -0.306951   7.686792e-01   \n","\n","                                          Wald Statistic  \n","TFT_EXT_SOURCE_3_2                           2466.701358  \n","TFT_EXT_SOURCE_3_1                            889.224623  \n","TFT_EXT_SOURCE_2_4                            473.717545  \n","TFT_EXT_SOURCE_2_3                            320.409945  \n","TFT_EXT_SOURCE_1_3                            269.521105  \n","CODE_GENDER_M_1.0                             235.224582  \n","TFT_EXT_SOURCE_2_2                            165.276982  \n","NAME_EDUCATION_TYPE_Higher education_1.0      122.703163  \n","TFT_EXT_SOURCE_1_2                            106.337750  \n","TFT_DEF_30_CNT_SOCIAL_CIRCLE_2                 87.988850  \n","FLAG_OWN_CAR_Y_1.0                             50.789180  \n","NAME_CONTRACT_TYPE_Revolving loans_1.0         50.429765  \n","TFT_EXT_SOURCE_2_1                             49.800641  \n","REGION_RATING_CLIENT_W_CITY_3                  49.182121  \n","NAME_INCOME_TYPE_Pensioner_1.0                 41.755050  \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_2                39.847765  \n","FLAG_DOCUMENT_3_1                              36.877563  \n","NAME_INCOME_TYPE_Working_1.0                   35.338591  \n","TFT_EXT_SOURCE_1_1                             34.106752  \n","NAME_FAMILY_STATUS_Married_1.0                 27.977086  \n","TFT_OWN_CAR_AGE_1                              21.660980  \n","REG_CITY_NOT_WORK_CITY_1                       20.879715  \n","REGION_RATING_CLIENT_W_CITY_2                  10.805167  \n","const                                           2.245998  \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_4                 1.395881  \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_3                 0.800046  \n","TFT_DEF_30_CNT_SOCIAL_CIRCLE_1                  0.256967  \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_5                 0.198930  \n","TFT_AMT_REQ_CREDIT_BUREAU_DAY_6                 0.086497  "],"text/html":["\n","  <div id=\"df-7416b227-112e-42bc-841d-c9e479000e2b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Beta Coefficient</th>\n","      <th>P-Value</th>\n","      <th>Wald Statistic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_3_2</th>\n","      <td>-1.329123</td>\n","      <td>0.000000e+00</td>\n","      <td>2466.701358</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_3_1</th>\n","      <td>-0.772777</td>\n","      <td>2.159106e-195</td>\n","      <td>889.224623</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_2_4</th>\n","      <td>-2.139296</td>\n","      <td>4.975200e-105</td>\n","      <td>473.717545</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_2_3</th>\n","      <td>-1.716768</td>\n","      <td>1.179252e-71</td>\n","      <td>320.409945</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_1_3</th>\n","      <td>-1.163510</td>\n","      <td>1.443054e-60</td>\n","      <td>269.521105</td>\n","    </tr>\n","    <tr>\n","      <th>CODE_GENDER_M_1.0</th>\n","      <td>0.336300</td>\n","      <td>4.325165e-53</td>\n","      <td>235.224582</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_2_2</th>\n","      <td>-1.237906</td>\n","      <td>7.958004e-38</td>\n","      <td>165.276982</td>\n","    </tr>\n","    <tr>\n","      <th>NAME_EDUCATION_TYPE_Higher education_1.0</th>\n","      <td>-0.293506</td>\n","      <td>1.619530e-28</td>\n","      <td>122.703163</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_1_2</th>\n","      <td>-0.655601</td>\n","      <td>6.218061e-25</td>\n","      <td>106.337750</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_2</th>\n","      <td>0.261837</td>\n","      <td>6.582447e-21</td>\n","      <td>87.988850</td>\n","    </tr>\n","    <tr>\n","      <th>FLAG_OWN_CAR_Y_1.0</th>\n","      <td>-0.204390</td>\n","      <td>1.028391e-12</td>\n","      <td>50.789180</td>\n","    </tr>\n","    <tr>\n","      <th>NAME_CONTRACT_TYPE_Revolving loans_1.0</th>\n","      <td>-0.323090</td>\n","      <td>1.235067e-12</td>\n","      <td>50.429765</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_2_1</th>\n","      <td>-0.703169</td>\n","      <td>1.701883e-12</td>\n","      <td>49.800641</td>\n","    </tr>\n","    <tr>\n","      <th>REGION_RATING_CLIENT_W_CITY_3</th>\n","      <td>0.315067</td>\n","      <td>2.332672e-12</td>\n","      <td>49.182121</td>\n","    </tr>\n","    <tr>\n","      <th>NAME_INCOME_TYPE_Pensioner_1.0</th>\n","      <td>-0.234509</td>\n","      <td>1.034547e-10</td>\n","      <td>41.755050</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_2</th>\n","      <td>0.190907</td>\n","      <td>2.745482e-10</td>\n","      <td>39.847765</td>\n","    </tr>\n","    <tr>\n","      <th>FLAG_DOCUMENT_3_1</th>\n","      <td>0.170960</td>\n","      <td>1.257852e-09</td>\n","      <td>36.877563</td>\n","    </tr>\n","    <tr>\n","      <th>NAME_INCOME_TYPE_Working_1.0</th>\n","      <td>0.136967</td>\n","      <td>2.770870e-09</td>\n","      <td>35.338591</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_EXT_SOURCE_1_1</th>\n","      <td>-0.407223</td>\n","      <td>5.216993e-09</td>\n","      <td>34.106752</td>\n","    </tr>\n","    <tr>\n","      <th>NAME_FAMILY_STATUS_Married_1.0</th>\n","      <td>-0.107847</td>\n","      <td>1.227605e-07</td>\n","      <td>27.977086</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_OWN_CAR_AGE_1</th>\n","      <td>0.166413</td>\n","      <td>3.253423e-06</td>\n","      <td>21.660980</td>\n","    </tr>\n","    <tr>\n","      <th>REG_CITY_NOT_WORK_CITY_1</th>\n","      <td>0.102882</td>\n","      <td>4.890462e-06</td>\n","      <td>20.879715</td>\n","    </tr>\n","    <tr>\n","      <th>REGION_RATING_CLIENT_W_CITY_2</th>\n","      <td>0.130020</td>\n","      <td>1.012172e-03</td>\n","      <td>10.805167</td>\n","    </tr>\n","    <tr>\n","      <th>const</th>\n","      <td>0.191714</td>\n","      <td>1.339605e-01</td>\n","      <td>2.245998</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_4</th>\n","      <td>0.538069</td>\n","      <td>2.374145e-01</td>\n","      <td>1.395881</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_3</th>\n","      <td>0.127411</td>\n","      <td>3.710797e-01</td>\n","      <td>0.800046</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_1</th>\n","      <td>-0.122435</td>\n","      <td>6.122115e-01</td>\n","      <td>0.256967</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_5</th>\n","      <td>-0.464807</td>\n","      <td>6.555857e-01</td>\n","      <td>0.198930</td>\n","    </tr>\n","    <tr>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_6</th>\n","      <td>-0.306951</td>\n","      <td>7.686792e-01</td>\n","      <td>0.086497</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7416b227-112e-42bc-841d-c9e479000e2b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7416b227-112e-42bc-841d-c9e479000e2b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7416b227-112e-42bc-841d-c9e479000e2b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f79fda94-7470-45c7-b318-ba4f78b1ed31\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f79fda94-7470-45c7-b318-ba4f78b1ed31')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f79fda94-7470-45c7-b318-ba4f78b1ed31 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7582eb4d-3a6f-4ce8-a417-41eda438f276\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('scorecard')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7582eb4d-3a6f-4ce8-a417-41eda438f276 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('scorecard');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["df_train_03.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"um7t4jJtZBnd","executionInfo":{"status":"ok","timestamp":1702951820075,"user_tz":180,"elapsed":32,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"e15806f0-8df2-4dac-e5f8-18e9cf8b09fb"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   TARGET  REGION_RATING_CLIENT_W_CITY_2  REGION_RATING_CLIENT_W_CITY_3  \\\n","0       0                            1.0                            0.0   \n","1       1                            0.0                            0.0   \n","2       0                            1.0                            0.0   \n","3       0                            1.0                            0.0   \n","4       1                            0.0                            1.0   \n","\n","   REG_CITY_NOT_WORK_CITY_1  FLAG_DOCUMENT_3_1  \\\n","0                       0.0                1.0   \n","1                       0.0                1.0   \n","2                       0.0                1.0   \n","3                       1.0                1.0   \n","4                       0.0                1.0   \n","\n","   NAME_CONTRACT_TYPE_Revolving loans_1.0  CODE_GENDER_M_1.0  \\\n","0                                     0.0                0.0   \n","1                                     0.0                0.0   \n","2                                     0.0                0.0   \n","3                                     0.0                0.0   \n","4                                     0.0                0.0   \n","\n","   FLAG_OWN_CAR_Y_1.0  NAME_INCOME_TYPE_Pensioner_1.0  \\\n","0                 0.0                             0.0   \n","1                 0.0                             0.0   \n","2                 0.0                             0.0   \n","3                 0.0                             0.0   \n","4                 0.0                             0.0   \n","\n","   NAME_INCOME_TYPE_Working_1.0  NAME_EDUCATION_TYPE_Higher education_1.0  \\\n","0                           0.0                                       0.0   \n","1                           1.0                                       1.0   \n","2                           1.0                                       1.0   \n","3                           1.0                                       1.0   \n","4                           0.0                                       0.0   \n","\n","   NAME_FAMILY_STATUS_Married_1.0  TFT_EXT_SOURCE_2_1  TFT_EXT_SOURCE_2_2  \\\n","0                             0.0                 0.0                 1.0   \n","1                             1.0                 0.0                 0.0   \n","2                             0.0                 0.0                 1.0   \n","3                             1.0                 0.0                 1.0   \n","4                             0.0                 0.0                 1.0   \n","\n","   TFT_EXT_SOURCE_2_3  TFT_EXT_SOURCE_2_4  TFT_EXT_SOURCE_1_1  \\\n","0                 0.0                 0.0                 0.0   \n","1                 1.0                 0.0                 0.0   \n","2                 0.0                 0.0                 0.0   \n","3                 0.0                 0.0                 0.0   \n","4                 0.0                 0.0                 1.0   \n","\n","   TFT_EXT_SOURCE_1_2  TFT_EXT_SOURCE_1_3  TFT_EXT_SOURCE_3_1  \\\n","0                 1.0                 0.0                 1.0   \n","1                 1.0                 0.0                 0.0   \n","2                 1.0                 0.0                 0.0   \n","3                 1.0                 0.0                 1.0   \n","4                 0.0                 0.0                 0.0   \n","\n","   TFT_EXT_SOURCE_3_2  TFT_OWN_CAR_AGE_1  TFT_DEF_30_CNT_SOCIAL_CIRCLE_1  \\\n","0                 0.0                1.0                             0.0   \n","1                 0.0                1.0                             0.0   \n","2                 1.0                1.0                             0.0   \n","3                 0.0                1.0                             0.0   \n","4                 1.0                1.0                             0.0   \n","\n","   TFT_DEF_30_CNT_SOCIAL_CIRCLE_2  TFT_AMT_REQ_CREDIT_BUREAU_DAY_2  \\\n","0                             0.0                              0.0   \n","1                             0.0                              0.0   \n","2                             0.0                              0.0   \n","3                             0.0                              1.0   \n","4                             0.0                              0.0   \n","\n","   TFT_AMT_REQ_CREDIT_BUREAU_DAY_3  TFT_AMT_REQ_CREDIT_BUREAU_DAY_4  \\\n","0                              0.0                              0.0   \n","1                              0.0                              0.0   \n","2                              0.0                              0.0   \n","3                              0.0                              0.0   \n","4                              0.0                              0.0   \n","\n","   TFT_AMT_REQ_CREDIT_BUREAU_DAY_5  TFT_AMT_REQ_CREDIT_BUREAU_DAY_6  \n","0                              0.0                              0.0  \n","1                              0.0                              0.0  \n","2                              0.0                              0.0  \n","3                              0.0                              0.0  \n","4                              0.0                              0.0  "],"text/html":["\n","  <div id=\"df-24518dd3-c862-49de-ad15-9b2be508ddfa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TARGET</th>\n","      <th>REGION_RATING_CLIENT_W_CITY_2</th>\n","      <th>REGION_RATING_CLIENT_W_CITY_3</th>\n","      <th>REG_CITY_NOT_WORK_CITY_1</th>\n","      <th>FLAG_DOCUMENT_3_1</th>\n","      <th>NAME_CONTRACT_TYPE_Revolving loans_1.0</th>\n","      <th>CODE_GENDER_M_1.0</th>\n","      <th>FLAG_OWN_CAR_Y_1.0</th>\n","      <th>NAME_INCOME_TYPE_Pensioner_1.0</th>\n","      <th>NAME_INCOME_TYPE_Working_1.0</th>\n","      <th>NAME_EDUCATION_TYPE_Higher education_1.0</th>\n","      <th>NAME_FAMILY_STATUS_Married_1.0</th>\n","      <th>TFT_EXT_SOURCE_2_1</th>\n","      <th>TFT_EXT_SOURCE_2_2</th>\n","      <th>TFT_EXT_SOURCE_2_3</th>\n","      <th>TFT_EXT_SOURCE_2_4</th>\n","      <th>TFT_EXT_SOURCE_1_1</th>\n","      <th>TFT_EXT_SOURCE_1_2</th>\n","      <th>TFT_EXT_SOURCE_1_3</th>\n","      <th>TFT_EXT_SOURCE_3_1</th>\n","      <th>TFT_EXT_SOURCE_3_2</th>\n","      <th>TFT_OWN_CAR_AGE_1</th>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_1</th>\n","      <th>TFT_DEF_30_CNT_SOCIAL_CIRCLE_2</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_2</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_3</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_4</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_5</th>\n","      <th>TFT_AMT_REQ_CREDIT_BUREAU_DAY_6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24518dd3-c862-49de-ad15-9b2be508ddfa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24518dd3-c862-49de-ad15-9b2be508ddfa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24518dd3-c862-49de-ad15-9b2be508ddfa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c27ed1f7-88e3-4ebd-bb79-09c44c694d20\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c27ed1f7-88e3-4ebd-bb79-09c44c694d20')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c27ed1f7-88e3-4ebd-bb79-09c44c694d20 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["df_train_03['const'] = 1.0\n","abt_oot_00['const'] = 1.0\n","\n","df_train_04 = df_train_03.drop(axis=1,columns=['TARGET'])\n","abt_oot_04 = abt_oot_00.drop(axis=1,columns=['TARGET'])"],"metadata":{"id":"jeyeaRaxZDPe","executionInfo":{"status":"ok","timestamp":1702951820076,"user_tz":180,"elapsed":21,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["df_train_04['Score_1'] = model.predict(df_train_04).round(4)\n","abt_oot_04['Score_1'] = model.predict(abt_oot_04).round(4)\n","\n","df_train_04['Score_0'] = 1 - df_train_04['Score_1']\n","abt_oot_04['Score_0'] = 1 - abt_oot_04['Score_1']"],"metadata":{"id":"NcxID3pQZH3g","executionInfo":{"status":"ok","timestamp":1702951820076,"user_tz":180,"elapsed":20,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","\n","# Plotando o histograma\n","plt.hist(df_train_04.Score_1, color='lightblue', bins=50, edgecolor='black')\n","plt.title(\"Histograma do Score - Treino\")\n","plt.xlabel(\"Valores\")\n","plt.ylabel(\"Frequência\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"E0_sIbCVZJ5P","executionInfo":{"status":"ok","timestamp":1702951820616,"user_tz":180,"elapsed":559,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"9ff81a52-f1f7-4d58-cac5-bfb4ec9ea10f"},"execution_count":94,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAk0AAAHHCAYAAACiOWx7AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABIYklEQVR4nO3deXgO9/7/8dedkESQhUhCEWKNXePQqLVSQaq0vlrU2pTTNmktrbZOHfuhpYqDVjeiiyqO0wVFrLVE1ZLaQm1tagliC9EmJPP7oyf3zy0Rk0XuWzwf1zVX3TPve+b9uUO9zHxmbothGIYAAACQIyd7NwAAAHAvIDQBAACYQGgCAAAwgdAEAABgAqEJAADABEITAACACYQmAAAAEwhNAAAAJhCaAAAATCA0AQ6gSpUq6t+/v73buC/x2d87xowZI4vFYu82cB8jNAEFLDo6WhaLRTt27Mh2e5s2bVSvXr18H2fFihUaM2ZMvveDgpWWlqYZM2aocePG8vDwkJeXl+rWratBgwbp4MGD9m7vrujfv78sFssdF8Ip7nXF7N0AAOnQoUNycsrdv2FWrFih2bNnE5wcTLdu3fT999+rZ8+eGjhwoK5fv66DBw9q2bJlat68uWrXrm3vFgvc3//+d4WGhlpfHz9+XKNGjdKgQYPUsmVL6/pq1arl6zgjR47UG2+8ka99APlBaAIcgKurq71byLWUlBSVLFnS3m04lJ9++knLli3Tv/71L/3jH/+w2TZr1ixdunSp0Hr5888/5eLikuswnhchISEKCQmxvt6xY4dGjRqlkJAQ9e7d+7bvy+3voWLFiqlYMf7agv1weQ5wALfOq7l+/brGjh2rGjVqyM3NTWXLllWLFi0UExMj6a/LIbNnz5Ykm8sfmVJSUvTKK6+oUqVKcnV1Va1atfTOO+/IMAyb4/7xxx96+eWX5ePjo9KlS+vxxx/XyZMnZbFYbM5gZc4lOXDggHr16iVvb2+1aNFCkrRnzx71799fgYGBcnNzk7+/v5599lmdP3/e5liZ+/jll1/Uu3dveXp6qly5cvrnP/8pwzD0+++/q0uXLvLw8JC/v7+mTp1q8/60tDSNGjVKwcHB8vT0VMmSJdWyZUutX7/e1GdsGIYmTJigihUryt3dXW3bttX+/fuzrT127Ji6d++uMmXKyN3dXQ899JCWL19+x2McPXpUkvTwww9n2ebs7KyyZcvarDt58qQiIiJUoUIFubq6qmrVqnrhhReUlpaWq142bNggi8WihQsXauTIkXrggQfk7u6u5ORkSdKPP/6oDh06yNPTU+7u7mrdurW2bNlyx/EUpMzL1hs3btSLL74oX19fVaxY0br9+++/V8uWLVWyZEmVLl1a4eHhWX4+2c1pslgsioqK0tdff6169erJ1dVVdevW1cqVK7P0sHv3bnXs2FEeHh4qVaqU2rVrp23btt2dAaNIIrIDd8nly5eVlJSUZf3169fv+N4xY8Zo0qRJeu6559S0aVMlJydrx44d2rVrlx599FH9/e9/16lTpxQTE6PPPvvM5r2GYejxxx/X+vXrFRERoUaNGmnVqlUaPny4Tp48qWnTpllr+/fvr0WLFqlPnz566KGHtHHjRoWHh9+2r+7du6tGjRqaOHGiNYDFxMTo2LFjGjBggPz9/bV//359+OGH2r9/v7Zt25blL7mnn35aQUFBeuutt7R8+XJNmDBBZcqU0QcffKBHHnlEb7/9tr744gu9+uqr+tvf/qZWrVpJkpKTk/Xxxx9bL3tduXJFn3zyicLCwrR9+3Y1atQox8901KhRmjBhgjp16qROnTpp165dat++vU1AkaQzZ86oefPmunbtml5++WWVLVtW8+fP1+OPP64lS5boiSeeuO0xAgICJElffPGFHn744RzPipw6dUpNmzbVpUuXNGjQINWuXVsnT57UkiVLdO3aNbm4uOS6l/Hjx8vFxUWvvvqqUlNT5eLionXr1qljx44KDg7W6NGj5eTkpHnz5umRRx7Rpk2b1LRp0xw/t4L24osvqly5cho1apRSUlIkSZ999pn69eunsLAwvf3227p27Zref/99tWjRQrt371aVKlVy3OfmzZu1dOlSvfjiiypdurT+/e9/q1u3bkpISLAG1f3796tly5by8PDQa6+9puLFi+uDDz5QmzZttHHjRjVr1uxuDx1FgQGgQM2bN8+QlONSt25dm/cEBAQY/fr1s75u2LChER4enuNxIiMjjez+CH/99deGJGPChAk26//v//7PsFgsxpEjRwzDMIydO3cakowhQ4bY1PXv39+QZIwePdq6bvTo0YYko2fPnlmOd+3atSzrvvzyS0OS8cMPP2TZx6BBg6zrbty4YVSsWNGwWCzGW2+9ZV1/8eJFo0SJEjaf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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Plotando o histograma\n","plt.hist(abt_oot_04.Score_1, color='lightblue', bins=50, edgecolor='black')\n","plt.title(\"Histograma do Score - Teste\")\n","plt.xlabel(\"Valores\")\n","plt.ylabel(\"Frequência\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"T4-0894rZLuw","executionInfo":{"status":"ok","timestamp":1702951821833,"user_tz":180,"elapsed":1259,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"351ee0e1-4fcc-4ccf-c9cf-f529e91fa8cd"},"execution_count":95,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#### Trazer o id e target para a tabela pós dataprep\n","\n","abt_train_t02 = df_train_04.merge(df_train_03[['TARGET']], left_index=True, right_index=True, how='inner')\n","abt_teste_t02 = abt_oot_04.merge(abt_oot_00[['TARGET']], left_index=True, right_index=True, how='inner')"],"metadata":{"id":"EXWdLpLjZOp_","executionInfo":{"status":"ok","timestamp":1702951821834,"user_tz":180,"elapsed":9,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import roc_auc_score, roc_curve, auc\n","import pandas as pd\n","import numpy as np\n","\n","def calculate_metrics(train_df, test_df, score_column, target_column,bins=10):\n","    def compute_metrics(df, score_column, target_column):\n","        df_sorted = df.sort_values(by=score_column, ascending=False)\n","\n","        # Calcular KS\n","        df_sorted['cum_good'] = (1 - df_sorted[target_column]).cumsum() / (1 - df_sorted[target_column]).sum()\n","        df_sorted['cum_bad'] = df_sorted[target_column].cumsum() / df_sorted[target_column].sum()\n","        df_sorted['ks'] = np.abs(df_sorted['cum_good'] - df_sorted['cum_bad'])\n","        ks_statistic = df_sorted['ks'].max()\n","\n","        # Calcular AUC\n","        auc_value = roc_auc_score(df_sorted[target_column], df_sorted[score_column])\n","\n","        # Calcular Gini\n","        gini = 2 * auc_value - 1\n","\n","        # Dividir o score em 10 faixas\n","        df_sorted['decile'] = pd.cut(df_sorted[score_column], bins, labels=False)\n","\n","        # Criar tabela detalhada\n","        table = df_sorted.groupby('decile').agg(\n","            min_score=pd.NamedAgg(column=score_column, aggfunc='min'),\n","            max_score=pd.NamedAgg(column=score_column, aggfunc='max'),\n","            event_rate=pd.NamedAgg(column=target_column, aggfunc='mean'),\n","            volume=pd.NamedAgg(column=target_column, aggfunc='size')\n","        ).reset_index()\n","\n","        return ks_statistic, auc_value, gini, table\n","\n","    ks_train, auc_train, gini_train, table_train = compute_metrics(train_df, score_column, target_column)\n","    ks_test, auc_test, gini_test, table_test = compute_metrics(test_df, score_column, target_column)\n","\n","    # Plotando o gráfico de barras para Event Rate por Decil\n","    barWidth = 0.3\n","    r1 = np.arange(len(table_train))\n","    r2 = [x + barWidth for x in r1]\n","\n","    plt.bar(r1, table_train['event_rate'], color='lightblue', width=barWidth, label='Train')\n","    plt.bar(r2, table_test['event_rate'], color='royalblue', width=barWidth, label='Test')\n","\n","    plt.xlabel('Decile')\n","    plt.ylabel('Event Rate')\n","    plt.title('Event Rate by Decile')\n","    plt.xticks([r + barWidth for r in range(len(table_train))], table_train['decile'])\n","    plt.legend()\n","    plt.show()\n","\n","    # Criando DataFrame para as métricas\n","    metrics_df = pd.DataFrame({\n","        'Metric': ['KS', 'AUC', 'Gini'],\n","        'Train Value': [ks_train, auc_train, gini_train],\n","        'Test Value': [ks_test, auc_test, gini_test]\n","    })\n","\n","    return metrics_df, table_train, table_test\n","\n","metrics, ord_score_train,vord_score_test = calculate_metrics(abt_train_t02, abt_teste_t02, 'Score_1', 'TARGET',bins=10)\n","metrics"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":599},"id":"LMNxhUO6ZT0g","executionInfo":{"status":"ok","timestamp":1702952722018,"user_tz":180,"elapsed":1323,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"924a0745-f691-49f5-86ad-b63d7b47878e"},"execution_count":110,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["  Metric  Train Value  Test Value\n","0     KS     0.350163    0.345513\n","1    AUC     0.733820    0.731674\n","2   Gini     0.467640    0.463347"],"text/html":["\n","  <div id=\"df-7e9a2b4d-8594-4086-a9b1-cac96f91879f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Metric</th>\n","      <th>Train Value</th>\n","      <th>Test Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KS</td>\n","      <td>0.350163</td>\n","      <td>0.345513</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AUC</td>\n","      <td>0.733820</td>\n","      <td>0.731674</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gini</td>\n","      <td>0.467640</td>\n","      <td>0.463347</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e9a2b4d-8594-4086-a9b1-cac96f91879f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e9a2b4d-8594-4086-a9b1-cac96f91879f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e9a2b4d-8594-4086-a9b1-cac96f91879f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7147dad7-4cf0-4e13-a43c-3afb93b342da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7147dad7-4cf0-4e13-a43c-3afb93b342da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7147dad7-4cf0-4e13-a43c-3afb93b342da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b4dce22c-50a1-469c-a7c7-08fb43dda58e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('metrics')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b4dce22c-50a1-469c-a7c7-08fb43dda58e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('metrics');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["\n"],"metadata":{"id":"J0HnFh7ohTVE","executionInfo":{"status":"ok","timestamp":1702951822822,"user_tz":180,"elapsed":14,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}}},"execution_count":97,"outputs":[]}]}