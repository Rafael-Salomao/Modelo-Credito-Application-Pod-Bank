{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["zHq17KwE39aS","i5zweTcf4hPo"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Feature Engeneering - Bureau**"],"metadata":{"id":"9YtGE19fcoH-"}},{"cell_type":"markdown","source":["## **Lendo dados com Spark**"],"metadata":{"id":"41sVrbm8ckbu"}},{"cell_type":"markdown","source":["### **Importar Bibliotecas**"],"metadata":{"id":"zGRTprnaORbW"}},{"cell_type":"code","source":["!pip install boto3\n","!pip install s3fs\n","!pip install Pyspark"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iV7jNcSaWilg","executionInfo":{"status":"ok","timestamp":1701370374462,"user_tz":180,"elapsed":29209,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"3a65efec-a035-4d0e-b72d-43a2a8219c2f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: boto3 in /usr/local/lib/python3.10/dist-packages (1.33.4)\n","Collecting botocore<1.34.0,>=1.33.4 (from boto3)\n","  Using cached botocore-1.33.4-py3-none-any.whl (11.8 MB)\n","Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from boto3) (1.0.1)\n","Requirement already satisfied: s3transfer<0.9.0,>=0.8.2 in /usr/local/lib/python3.10/dist-packages (from boto3) (0.8.2)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.10/dist-packages (from botocore<1.34.0,>=1.33.4->boto3) (2.8.2)\n","Requirement already satisfied: urllib3<2.1,>=1.25.4 in /usr/local/lib/python3.10/dist-packages (from botocore<1.34.0,>=1.33.4->boto3) (2.0.7)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.34.0,>=1.33.4->boto3) (1.16.0)\n","Installing collected packages: botocore\n","  Attempting uninstall: botocore\n","    Found existing installation: botocore 1.31.64\n","    Uninstalling botocore-1.31.64:\n","      Successfully uninstalled botocore-1.31.64\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","aiobotocore 2.7.0 requires botocore<1.31.65,>=1.31.16, but you have botocore 1.33.4 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed botocore-1.33.4\n","Requirement already satisfied: s3fs in /usr/local/lib/python3.10/dist-packages (2023.10.0)\n","Requirement already satisfied: aiobotocore~=2.7.0 in /usr/local/lib/python3.10/dist-packages (from s3fs) (2.7.0)\n","Requirement already satisfied: fsspec==2023.10.0 in /usr/local/lib/python3.10/dist-packages (from s3fs) (2023.10.0)\n","Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.10/dist-packages (from s3fs) (3.8.6)\n","Collecting botocore<1.31.65,>=1.31.16 (from aiobotocore~=2.7.0->s3fs)\n","  Using cached botocore-1.31.64-py3-none-any.whl (11.3 MB)\n","Requirement already satisfied: wrapt<2.0.0,>=1.10.10 in /usr/local/lib/python3.10/dist-packages (from aiobotocore~=2.7.0->s3fs) (1.14.1)\n","Requirement already satisfied: aioitertools<1.0.0,>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from aiobotocore~=2.7.0->s3fs) (0.11.0)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (23.1.0)\n","Requirement already satisfied: charset-normalizer<4.0,>=2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (3.3.2)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (6.0.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (4.0.3)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (1.9.2)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (1.4.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (1.3.1)\n","Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from botocore<1.31.65,>=1.31.16->aiobotocore~=2.7.0->s3fs) (1.0.1)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.10/dist-packages (from botocore<1.31.65,>=1.31.16->aiobotocore~=2.7.0->s3fs) (2.8.2)\n","Requirement already satisfied: urllib3<2.1,>=1.25.4 in /usr/local/lib/python3.10/dist-packages (from botocore<1.31.65,>=1.31.16->aiobotocore~=2.7.0->s3fs) (2.0.7)\n","Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.10/dist-packages (from yarl<2.0,>=1.0->aiohttp!=4.0.0a0,!=4.0.0a1->s3fs) (3.4)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.31.65,>=1.31.16->aiobotocore~=2.7.0->s3fs) (1.16.0)\n","Installing collected packages: botocore\n","  Attempting uninstall: botocore\n","    Found existing installation: botocore 1.33.4\n","    Uninstalling botocore-1.33.4:\n","      Successfully uninstalled botocore-1.33.4\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","boto3 1.33.4 requires botocore<1.34.0,>=1.33.4, but you have botocore 1.31.64 which is incompatible.\n","s3transfer 0.8.2 requires botocore<2.0a.0,>=1.33.2, but you have botocore 1.31.64 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed botocore-1.31.64\n","Requirement already satisfied: Pyspark in /usr/local/lib/python3.10/dist-packages (3.5.0)\n","Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.10/dist-packages (from Pyspark) (0.10.9.7)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import boto3\n","from pyspark.sql import SparkSession\n","from pyspark.sql.functions import col, when, round"],"metadata":{"id":"nXKJ7L9mWk9m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["spark = SparkSession.builder.appName('Feature Engineering').getOrCreate()\n","spark"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":222},"id":"kPWNDglnWoZq","executionInfo":{"status":"ok","timestamp":1701370386871,"user_tz":180,"elapsed":12007,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"a30b970d-7214-4092-ccfe-00b817bc45f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pyspark.sql.session.SparkSession at 0x7894e95b1570>"],"text/html":["\n","            <div>\n","                <p><b>SparkSession - in-memory</b></p>\n","                \n","        <div>\n","            <p><b>SparkContext</b></p>\n","\n","            <p><a href=\"http://652e8c271ce3:4040\">Spark UI</a></p>\n","\n","            <dl>\n","              <dt>Version</dt>\n","                <dd><code>v3.5.0</code></dd>\n","              <dt>Master</dt>\n","                <dd><code>local[*]</code></dd>\n","              <dt>AppName</dt>\n","                <dd><code>Feature Engineering</code></dd>\n","            </dl>\n","        </div>\n","        \n","            </div>\n","        "]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### **Importar tabela 'bureau'.**"],"metadata":{"id":"9zhjRvXpN3T9"}},{"cell_type":"markdown","source":["### **Importar .csv usando PySpark.**"],"metadata":{"id":"FwXUdEi_Dq87"}},{"cell_type":"code","source":["# Caminho para ler o arquivo CSV localmente no Colab\n","path = \"/content/bureau.csv\"\n","\n","# Ler o arquivo de descrição das colunas\n","bureau_00 = spark.read.csv(path, header=True)\n","\n","# Mostrar número de linhas\n","bureau_00.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YPxhdACyW7SH","executionInfo":{"status":"ok","timestamp":1701370400983,"user_tz":180,"elapsed":14119,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"e6ffc642-d0ff-4e02-df14-c5015c2253ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1716428"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# bureau_00.show(truncate=False)"],"metadata":{"id":"3oS9hl-PN-Om","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701370401890,"user_tz":180,"elapsed":925,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"90225aca-6837-4aae-f404-1e15830a4fc6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------+------------+-------------+---------------+-----------+------------------+-------------------+-----------------+----------------------+------------------+--------------+-------------------+--------------------+----------------------+---------------+------------------+-----------+\n","|SK_ID_CURR|SK_ID_BUREAU|CREDIT_ACTIVE|CREDIT_CURRENCY|DAYS_CREDIT|CREDIT_DAY_OVERDUE|DAYS_CREDIT_ENDDATE|DAYS_ENDDATE_FACT|AMT_CREDIT_MAX_OVERDUE|CNT_CREDIT_PROLONG|AMT_CREDIT_SUM|AMT_CREDIT_SUM_DEBT|AMT_CREDIT_SUM_LIMIT|AMT_CREDIT_SUM_OVERDUE|CREDIT_TYPE    |DAYS_CREDIT_UPDATE|AMT_ANNUITY|\n","+----------+------------+-------------+---------------+-----------+------------------+-------------------+-----------------+----------------------+------------------+--------------+-------------------+--------------------+----------------------+---------------+------------------+-----------+\n","|215354    |5714462     |Closed       |currency 1     |-497       |0                 |-153.0             |-153.0           |NULL                  |0                 |91323.0       |0.0                |NULL                |0.0                   |Consumer credit|-131              |NULL       |\n","|215354    |5714463     |Active       |currency 1     |-208       |0                 |1075.0             |NULL             |NULL                  |0                 |225000.0      |171342.0           |NULL                |0.0                   |Credit card    |-20               |NULL       |\n","|215354    |5714464     |Active       |currency 1     |-203       |0                 |528.0              |NULL             |NULL                  |0                 |464323.5      |NULL               |NULL                |0.0                   |Consumer credit|-16               |NULL       |\n","|215354    |5714465     |Active       |currency 1     |-203       |0                 |NULL               |NULL             |NULL                  |0                 |90000.0       |NULL               |NULL                |0.0                   |Credit card    |-16               |NULL       |\n","|215354    |5714466     |Active       |currency 1     |-629       |0                 |1197.0             |NULL             |77674.5               |0                 |2700000.0     |NULL               |NULL                |0.0                   |Consumer credit|-21               |NULL       |\n","|215354    |5714467     |Active       |currency 1     |-273       |0                 |27460.0            |NULL             |0.0                   |0                 |180000.0      |71017.38           |108982.62           |0.0                   |Credit card    |-31               |NULL       |\n","|215354    |5714468     |Active       |currency 1     |-43        |0                 |79.0               |NULL             |0.0                   |0                 |42103.8       |42103.8            |0.0                 |0.0                   |Consumer credit|-22               |NULL       |\n","|162297    |5714469     |Closed       |currency 1     |-1896      |0                 |-1684.0            |-1710.0          |14985.0               |0                 |76878.45      |0.0                |0.0                 |0.0                   |Consumer credit|-1710             |NULL       |\n","|162297    |5714470     |Closed       |currency 1     |-1146      |0                 |-811.0             |-840.0           |0.0                   |0                 |103007.7      |0.0                |0.0                 |0.0                   |Consumer credit|-840              |NULL       |\n","|162297    |5714471     |Active       |currency 1     |-1146      |0                 |-484.0             |NULL             |0.0                   |0                 |4500.0        |0.0                |0.0                 |0.0                   |Credit card    |-690              |NULL       |\n","|162297    |5714472     |Active       |currency 1     |-1146      |0                 |-180.0             |NULL             |0.0                   |0                 |337500.0      |0.0                |0.0                 |0.0                   |Credit card    |-690              |NULL       |\n","|162297    |5714473     |Closed       |currency 1     |-2456      |0                 |-629.0             |-825.0           |NULL                  |0                 |675000.0      |0.0                |0.0                 |0.0                   |Consumer credit|-706              |NULL       |\n","|162297    |5714474     |Active       |currency 1     |-277       |0                 |5261.0             |NULL             |0.0                   |0                 |7033500.0     |NULL               |NULL                |0.0                   |Mortgage       |-31               |NULL       |\n","|402440    |5714475     |Active       |currency 1     |-96        |0                 |269.0              |NULL             |0.0                   |0                 |89910.0       |76905.0            |0.0                 |0.0                   |Consumer credit|-22               |NULL       |\n","|238881    |5714482     |Closed       |currency 1     |-318       |0                 |-187.0             |-187.0           |NULL                  |0                 |0.0           |0.0                |0.0                 |0.0                   |Credit card    |-185              |NULL       |\n","|238881    |5714484     |Closed       |currency 1     |-2911      |0                 |-2607.0            |-2604.0          |NULL                  |0                 |48555.0       |NULL               |NULL                |0.0                   |Consumer credit|-2601             |NULL       |\n","|238881    |5714485     |Closed       |currency 1     |-2148      |0                 |-1595.0            |-987.0           |NULL                  |0                 |135000.0      |NULL               |NULL                |0.0                   |Consumer credit|-984              |NULL       |\n","|238881    |5714486     |Active       |currency 1     |-381       |0                 |NULL               |NULL             |NULL                  |0                 |450000.0      |520920.0           |NULL                |0.0                   |Consumer credit|-4                |NULL       |\n","|238881    |5714487     |Active       |currency 1     |-95        |0                 |1720.0             |NULL             |NULL                  |0                 |67500.0       |8131.5             |NULL                |0.0                   |Credit card    |-7                |NULL       |\n","|238881    |5714488     |Closed       |currency 1     |-444       |0                 |-77.0              |-77.0            |0.0                   |0                 |107184.06     |0.0                |0.0                 |0.0                   |Consumer credit|-71               |NULL       |\n","+----------+------------+-------------+---------------+-----------+------------------+-------------------+-----------------+----------------------+------------------+--------------+-------------------+--------------------+----------------------+---------------+------------------+-----------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["# bureau_00.printSchema()"],"metadata":{"id":"pXJih1UD-I7J"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Criação de variáveis preditivas**"],"metadata":{"id":"vFnpQmX9OmXR"}},{"cell_type":"markdown","source":["## **bureau**"],"metadata":{"id":"h-m1G-_DX39y"}},{"cell_type":"markdown","source":["Primeiro iremos criar variáveis preditivas na tabela \"bureau_balance\" para acrescentar essas variáveis na tabela \"bureau\".\n","\n","Após essa união das duas tabelas, iremos realizar a criação de variáveis preditivas na tabela \"bureau\"."],"metadata":{"id":"SNj-JhrtOrO9"}},{"cell_type":"code","source":["# Definir funções de agregações desejadas\n","agg = ['SUM', 'MAX', 'MIN', 'AVG']\n","\n","var_categoricas = ['CREDIT_ACTIVE', 'CREDIT_TYPE', 'CREDIT_CURRENCY']\n","\n","var_numericas = ['DAYS_CREDIT','CREDIT_DAY_OVERDUE', 'DAYS_CREDIT_ENDDATE',\\\n","                 'DAYS_ENDDATE_FACT', 'AMT_CREDIT_MAX_OVERDUE', 'CNT_CREDIT_PROLONG', \\\n","                 'AMT_CREDIT_SUM_LIMIT', 'AMT_CREDIT_SUM_DEBT', 'AMT_CREDIT_SUM', \\\n","                 'AMT_CREDIT_MAX_OVERDUE', 'DAYS_CREDIT_UPDATE', 'AMT_ANNUITY']\n","\n","# Definir flags de meses\n","meses_flag = ['ultimos_3_meses_flag', 'ultimos_6_meses_flag', 'ultimos_9_meses_flag', 'ultimos_12_meses_flag']"],"metadata":{"id":"lGW0T3gKbTIT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bureau_00.createOrReplaceTempView('bureau_00')"],"metadata":{"id":"DAx2f7s0W12z"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **Criando flags de janela para histórico:**\n","\n","- últimos 3 meses\n","\n","- últimos 6 meses\n","\n","- últimos 12 meses"],"metadata":{"id":"dMa5RZcO4Ppj"}},{"cell_type":"code","source":["bureau_01 = spark.sql(\"\"\"\n","SELECT\n","    *,\n","    CASE\n","        WHEN DAYS_CREDIT BETWEEN MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) - 90 AND MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) THEN 1\n","        ELSE 0\n","    END AS ultimos_3_meses_flag,\n","    CASE\n","        WHEN DAYS_CREDIT BETWEEN MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) - 180 AND MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) THEN 1\n","        ELSE 0\n","    END AS ultimos_6_meses_flag,\n","    CASE\n","        WHEN DAYS_CREDIT BETWEEN MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) - 270 AND MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) THEN 1\n","        ELSE 0\n","    END AS ultimos_9_meses_flag,\n","    CASE\n","        WHEN DAYS_CREDIT BETWEEN MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) - 360 AND MAX(DAYS_CREDIT) OVER (PARTITION BY `SK_ID_BUREAU`) THEN 1\n","        ELSE 0\n","    END AS ultimos_12_meses_flag\n","FROM bureau_00\n","ORDER BY `SK_ID_BUREAU`, DAYS_CREDIT;\n","\"\"\")\n","bureau_01.createOrReplaceTempView(\"bureau_01\")\n","bureau_01.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"acBlde73OAWL","executionInfo":{"status":"ok","timestamp":1701370404475,"user_tz":180,"elapsed":2589,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"c5df8ad8-c45e-444f-ea61-23c4fd626bd8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1716428"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# bureau_01.show()"],"metadata":{"id":"M0EQDvoWPKMS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **Criando variáveis explicativas de primeira camada**\n","\n","- usar média, mínimo, soma, máximo\n","- considerar variáveis categóricas e variáveis numéricas"],"metadata":{"id":"nKV5KHUz3p2X"}},{"cell_type":"markdown","source":["### **Gerar variáveis.**"],"metadata":{"id":"tXDxHnwWGKix"}},{"cell_type":"code","source":["# Importar SparkSession\n","from pyspark.sql import SparkSession\n","\n","# Criar uma sessão do Spark\n","spark = SparkSession.builder.appName(\"AdaptacaoCodigo\").getOrCreate()\n","\n","df_original_spark = bureau_01\n","\n","# Inicializar o contador\n","contador_resultados = 0\n","\n","# Criar lista para armazenar os resultados\n","resultados = []\n","\n","for ag in agg:\n","    for var_cat in var_categoricas:\n","        # Filtrar valores distintos não nulos\n","        distinct_values = df_original_spark.select(var_cat).distinct().na.drop(subset=[var_cat]).rdd.flatMap(lambda x: x).collect()\n","\n","        for dom_cat_value in distinct_values:\n","            for var_numerica in var_numericas:\n","                resultado = f\"ROUND({ag}(CASE WHEN {var_cat} = '{dom_cat_value}' THEN {var_numerica} ELSE NULL END), 2) as {ag.lower()}_{var_numerica.lower()[:5]}_{var_cat.lower()[:4]}_{dom_cat_value.lower()[:3].replace(' ', '_')},\"\n","\n","                # Adicionar o resultado à lista\n","                resultados.append(resultado)\n","\n","                for mes_flag in meses_flag:\n","                    resultado = f\"ROUND({ag}(CASE WHEN {var_cat} = '{dom_cat_value}' AND {mes_flag} = 1 THEN {var_numerica} ELSE NULL END), 2) as {ag.lower()}_U{mes_flag.split('_')[1]}M_{var_numerica.lower()[:5]}_{var_cat.lower()[:4]}_{dom_cat_value.lower()[:3].replace(' ', '_')},\"\n","\n","                    # Adicionar o resultado à lista\n","                    resultados.append(resultado)\n","\n","                    # Incrementar o contador\n","                    contador_resultados += 1\n","\n","# Printar o total de combinações\n","print(f\"Total de combinações: {contador_resultados}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"omyo-mVQ80Gn","executionInfo":{"status":"ok","timestamp":1701370496973,"user_tz":180,"elapsed":58910,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"aeba5c48-8aa8-4e74-f183-4ddcde00fa75"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total de combinações: 4416\n"]}]},{"cell_type":"code","source":["# Inicializa a lista para armazenar os resultados\n","resultados_formatados = []\n","\n","# Se há pelo menos um resultado na lista\n","if resultados:\n","    # Remove a vírgula do último item\n","    resultados[-1] = resultados[-1].rstrip(',')\n","\n","    # Adiciona os resultados formatados à lista\n","    resultados_formatados.extend(resultados)\n","\n","    # Une a lista em uma string usando uma quebra de linha como separador\n","    resultados_str = '\\n'.join(resultados_formatados)\n","    # print(resultados_str)\n","else:\n","    resultados_str = \"A lista de resultados está vazia.\""],"metadata":{"id":"arGescvcYxvg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **Colar variáveis criadas no código PySpark-SQL.**"],"metadata":{"id":"g5x7pPaKGUW6"}},{"cell_type":"code","source":["bureau_02 = spark.sql(f'''\n","SELECT\n","  SK_ID_CURR as SK_ID_CURR_bureau,\n","  {resultados_str}\n","FROM\n","  bureau_01\n","GROUP BY\n","  SK_ID_CURR\n","''')\n","\n","bureau_02.createOrReplaceTempView(\"bureau_02\")\n","bureau_02.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g8iQvbq3clfK","executionInfo":{"status":"ok","timestamp":1701370519738,"user_tz":180,"elapsed":22781,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"6dedb245-86d7-47dd-adda-49169b3ebf50"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["305811"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["print(len(bureau_02.columns))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xVCexpUfZAzx","executionInfo":{"status":"ok","timestamp":1701370520209,"user_tz":180,"elapsed":492,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"8bc5f90a-7538-48fd-e61b-e1facb7dc79e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5521\n"]}]},{"cell_type":"markdown","source":["## **Criando variáveis explicativas de segunda camada**\n","\n","- Razão entre variáveis históricas"],"metadata":{"id":"zHq17KwE39aS"}},{"cell_type":"code","source":["# ID = 'SK_ID_CURR_bureau'\n","\n","# # Obter o esquema do DataFrame\n","# schema = bureau_02.schema\n","\n","# # Extrair nomes das colunas excluindo \"SK_ID_BUREAU_b\"\n","# colunas_originais = [col.name for col in schema if col.name != ID]\n","\n","# # Imprimir a lista de nomes das colunas\n","# print(colunas_originais)"],"metadata":{"id":"m6GbVxVE19Z8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **Gerar variáveis.**"],"metadata":{"id":"k1nK3I-lLJhp"}},{"cell_type":"code","source":["# # Inicializar o contador\n","# contador_resultados = 0\n","\n","# # Criar lista para armazenar os resultados\n","# resultados = []\n","\n","# # Criar novas colunas relacionadas\n","# for i in range(len(colunas_originais)):\n","#     for j in range(i+1, len(colunas_originais)):\n","#         coluna_i = colunas_originais[i]\n","#         coluna_j = colunas_originais[j]\n","#         nova_coluna_nome = f\"{coluna_i.split('_')[0]}_{coluna_j.split('_')[0]}_{coluna_i[4:]}_{coluna_j.split('_')[-1]}\"\n","#         resultado = f\"CASE WHEN {coluna_j} = 0 THEN NULL ELSE ROUND({coluna_i} / {coluna_j}, 2) END AS {nova_coluna_nome},\"\n","\n","#         # Adicionar o resultado à lista\n","#         resultados.append(resultado)\n","\n","#         # Incrementar o contador\n","#         contador_resultados += 1\n","\n","# # Printar o total de combinações\n","# print(f\"Total de combinações: {contador_resultados}\")"],"metadata":{"id":"djDbaSCqE5Dk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# # Inicializa a lista para armazenar os resultados\n","# resultados_formatados = []\n","\n","# # Se há pelo menos um resultado na lista\n","# if resultados:\n","#     # Remove a vírgula do último item\n","#     resultados[-1] = resultados[-1].rstrip(',')\n","\n","#     # Adiciona os resultados formatados à lista\n","#     resultados_formatados.extend(resultados)\n","\n","#     # Une a lista em uma string usando uma quebra de linha como separador\n","#     resultados_str = '\\n'.join(resultados_formatados)\n","#     # print(resultados_str)\n","# else:\n","#     resultados_str = \"A lista de resultados está vazia.\""],"metadata":{"id":"TI8cqp3iZObM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### **Colar variáveis criadas no código PySpark-SQL.**"],"metadata":{"id":"nte2Iah8LL2N"}},{"cell_type":"code","source":["# bureau_03 = spark.sql(f'''\n","# SELECT\n","#   *,\n","#   {resultados_str}\n","# FROM\n","#   bureau_02\n","# ''')\n","\n","# bureau_03.createOrReplaceTempView(\"bureau_03\")\n","# bureau_03.count()"],"metadata":{"id":"m2QHPtlGZQQ_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# bureau_03.show()"],"metadata":{"id":"axtBZQg1LWHP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# print(len(bureau_balance_03.columns))"],"metadata":{"id":"s2CZkz29vaDU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **Trazer as variáveis explicativas para a base de público**"],"metadata":{"id":"i5zweTcf4hPo"}},{"cell_type":"code","source":["# abt_bureau_balance = spark.sql(\"\"\"\n","#     Select\n","#         pub.*,\n","#         b.*,\n","#         date_format(CURRENT_DATE, 'yyyyMM') as PK_DATREF,\n","#         CURRENT_DATE as PK_DAT_PROC\n","#     from\n","#         bureau_00 as pub\n","#     left join\n","#         bureau_balance_03 as b\n","#     on\n","#         pub.SK_ID_BUREAU = b.`SK_ID_BUREAU_bureau_balance`\n","\n","# \"\"\")\n","\n","# abt_bureau_balance.count()"],"metadata":{"id":"oTYMcPcC4gXB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# bureau_00.count()"],"metadata":{"id":"TrZ36lmRPrUN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# abt_bureau_balance.show()"],"metadata":{"id":"UrTLOUVHMcEs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **Salvando tabela no diretório do Drive e S3.**"],"metadata":{"id":"cp38TL7DP1Qz"}},{"cell_type":"code","source":["abt_bureau = bureau_02"],"metadata":{"id":"zVVZVw-7ZZ7D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Save to parquet\n","abt_bureau.write.mode(\"overwrite\").parquet(\"/content/abt_bureau.parquet\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":723},"id":"OLeMiLq4Zf2c","executionInfo":{"status":"error","timestamp":1701370731209,"user_tz":180,"elapsed":211003,"user":{"displayName":"Rafael Salomao","userId":"07380706284005681115"}},"outputId":"d1903ba3-83b7-4b29-f75b-a9ae4cb448cd"},"execution_count":null,"outputs":[{"output_type":"error","ename":"Py4JJavaError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mPy4JJavaError\u001b[0m                             Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-e04be389849c>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Save to parquet\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mabt_bureau\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"overwrite\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparquet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/abt_bureau.parquet\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pyspark/sql/readwriter.py\u001b[0m in \u001b[0;36mparquet\u001b[0;34m(self, path, mode, partitionBy, compression)\u001b[0m\n\u001b[1;32m   1719\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpartitionBy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpartitionBy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1720\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_opts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcompression\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcompression\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1721\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jwrite\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparquet\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1722\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1723\u001b[0m     def text(\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1320\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1321\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1322\u001b[0;31m         return_value = get_return_value(\n\u001b[0m\u001b[1;32m   1323\u001b[0m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[1;32m   1324\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pyspark/errors/exceptions/captured.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m    177\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mAny\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    178\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 179\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    180\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mPy4JJavaError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    181\u001b[0m             \u001b[0mconverted\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconvert_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjava_exception\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/py4j/protocol.py\u001b[0m in \u001b[0;36mget_return_value\u001b[0;34m(answer, gateway_client, target_id, name)\u001b[0m\n\u001b[1;32m    324\u001b[0m             \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mOUTPUT_CONVERTER\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgateway_client\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    325\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0manswer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mREFERENCE_TYPE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 326\u001b[0;31m                 raise Py4JJavaError(\n\u001b[0m\u001b[1;32m    327\u001b[0m                     \u001b[0;34m\"An error occurred while calling {0}{1}{2}.\\n\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m                     format(target_id, \".\", name), value)\n","\u001b[0;31mPy4JJavaError\u001b[0m: An error occurred while calling o283.parquet.\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 60.0 failed 1 times, most recent failure: Lost task 1.0 in stage 60.0 (TID 63) (652e8c271ce3 executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)\n\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\n\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)\n\tat org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)\n\tat scala.Option.foreach(Option.scala:407)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\nCaused by: java.lang.OutOfMemoryError: Java heap space\n"]}]},{"cell_type":"code","source":["pip list --format=freeze > '/content/requirements.txt'"],"metadata":{"id":"njMZLCGAj9so"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Crie uma sessão do Spark\n","spark = SparkSession.builder.appName(\"LeituraParquet\").getOrCreate()\n","\n","# Caminho para o arquivo Parquet\n","caminho_arquivo_parquet = \"/content/abt_bureau_balance.parquet\"\n","\n","# Leia o arquivo Parquet\n","dados_parquet = spark.read.parquet(caminho_arquivo_parquet)\n","\n","# Mostre o esquema do DataFrame\n","dados_parquet.printSchema()\n","\n","# Mostre algumas linhas do DataFrame\n","dados_parquet.show()"],"metadata":{"id":"2Hq-dkQ_a03I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Q9tz9-c8a9Wm"},"execution_count":null,"outputs":[]}]}